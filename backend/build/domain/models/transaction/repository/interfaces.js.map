{"version":3,"sources":["../../../../../app/domain/models/transaction/repository/interfaces.ts"],"sourcesContent":["import { UserId } from \"@models/user/value-objects/id\";\nimport { TransactionEntity } from \"@models/transaction/entity\";\nimport { TransactionId } from \"@models/transaction/value-objects/id\";\nimport { AccountId } from \"@models/account/value-objects/id\";\nimport { EntityManager } from \"typeorm\";\n\nexport interface TransactionRepositoryInterface {\n    create(transaction: TransactionEntity, manager?: EntityManager): Promise<TransactionEntity>;\n    findById(id: TransactionId): Promise<TransactionEntity | null>;\n    findAll(): Promise<TransactionEntity[]>;\n    findByUserId(userId: UserId): Promise<TransactionEntity[]>;\n    findByAccountId(accountId: AccountId): Promise<TransactionEntity[]>;\n    update(id: TransactionId, transaction: TransactionEntity, manager?: EntityManager): Promise<TransactionEntity>;\n    delete(id: TransactionId): Promise<void>;\n}"],"mappings":";;;;;;;;;;;;;;;;AAMA;;","names":[]}