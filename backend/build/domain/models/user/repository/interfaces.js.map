{"version":3,"sources":["../../../../../app/domain/models/user/repository/interfaces.ts"],"sourcesContent":["import { EntityManager } from \"typeorm\";\nimport { UserEntity } from \"@models/user/entity\";\nimport { UserEmail } from \"@models/user/value-objects/email\";\nimport { UserId } from \"@models/user/value-objects/id\";\n\nexport interface UserRepositoryInterface {\n  withTransaction(manager: EntityManager): this;\n  create(user: UserEntity): Promise<UserEntity>;\n  findByEmail(email: UserEmail): Promise<UserEntity | null>;\n  findById(id: UserId): Promise<UserEntity | null>;\n  exists(email: UserEmail): Promise<boolean>;\n  update(id: UserId, user: UserEntity): Promise<UserEntity>;\n  delete(id: UserId): Promise<void>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAKA;;","names":[]}