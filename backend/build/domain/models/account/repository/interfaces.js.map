{"version":3,"sources":["../../../../../app/domain/models/account/repository/interfaces.ts"],"sourcesContent":["import { UserId } from \"@models/user/value-objects/id\";\nimport { AccountEntity } from \"@models/account/entity\";\nimport { AccountId } from \"@models/account/value-objects/id\";\nimport { EntityManager } from \"typeorm\";\n\nexport interface AccountRepositoryInterface {\n  withTransaction(manager: EntityManager): this;\n  create(account: AccountEntity, manager?: EntityManager): Promise<AccountEntity>;\n  findByUserId(id: UserId): Promise<AccountEntity[] | null>;\n  findById(id: AccountId, manager?: EntityManager): Promise<AccountEntity | null>;\n  update(id: AccountId, account: AccountEntity, manager?: EntityManager): Promise<AccountEntity>;\n  delete(id: AccountId, manager?: EntityManager): Promise<void>;\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAKA;;","names":[]}