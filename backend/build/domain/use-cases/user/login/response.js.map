{"version":3,"sources":["../../../../../app/domain/use-cases/user/login/response.ts","../../../../../app/domain/errors/domain-error.ts","../../../../../app/domain/errors/validation-error.ts","../../../../../app/domain/errors/user/invalid-auth-result-error.ts"],"sourcesContent":["import { InvalidAuthResultError } from \"@errors/user/invalid-auth-result-error\";\nimport { AuthResult } from \"@useCases/user/login/types\";\n\nexport class LoginResponse {\n  private constructor(\n    private readonly authResult: AuthResult | null,\n    private readonly success: boolean,\n    private readonly message: string,\n    private readonly errors: string[],\n  ) {}\n\n  public static success(authResult: AuthResult): LoginResponse {\n    return new LoginResponse(authResult, true, \"Login successful\", []);\n  }\n\n  public static failure(message: string, errors: string[] = []): LoginResponse {\n    return new LoginResponse(null, false, message, errors);\n  }\n\n  public static validationFailure(errors: string[]): LoginResponse {\n    return new LoginResponse(null, false, \"Validation failed\", errors);\n  }\n\n  public getAuthResult(): AuthResult {\n    if (!this.authResult) {\n      throw new InvalidAuthResultError(\"Cannot get auth result from failed response\");\n    }\n    return this.authResult;\n  }\n\n  public isSuccess(): boolean {\n    return this.success;\n  }\n\n  public getMessage(): string {\n    return this.message;\n  }\n\n  public getErrors(): string[] {\n    return this.errors;\n  }\n\n  public hasErrors(): boolean {\n    return this.errors.length > 0;\n  }\n}\n","export abstract class DomainError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, DomainError.prototype);\n  }\n\n  public abstract getStatusCode(): number;\n} ","import { DomainError } from \"./domain-error\";\n\nexport class ValidationError extends DomainError {\n  constructor(message: string, private readonly errors: string[] = []) {\n    super(message);\n    Object.setPrototypeOf(this, ValidationError.prototype);\n  }\n\n  public getStatusCode(): number {\n    return 400;\n  }\n\n  public getErrors(): string[] {\n    return this.errors;\n  }\n} ","import { ValidationError } from \"../validation-error\";\n\nexport class InvalidAuthResultError extends ValidationError {\n  constructor(message: string) {\n    super(message);\n    Object.setPrototypeOf(this, InvalidAuthResultError.prototype);\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;ACAO,IAAeA,cAAf,MAAeA,qBAAoBC,MAAAA;EAA1C,OAA0CA;;;EACxCC,YAAYC,SAAiB;AAC3B,UAAMA,OAAAA;AACN,SAAKC,OAAO,KAAKF,YAAYE;AAC7BC,WAAOC,eAAe,MAAMN,aAAYO,SAAS;EACnD;AAGF;;;ACNO,IAAMC,kBAAN,MAAMA,yBAAwBC,YAAAA;EAFrC,OAEqCA;;;;EACnCC,YAAYC,SAAkCC,SAAmB,CAAA,GAAI;AACnE,UAAMD,OAAAA,GAAAA,KADsCC,SAAAA;AAE5CC,WAAOC,eAAe,MAAMN,iBAAgBO,SAAS;EACvD;EAEOC,gBAAwB;AAC7B,WAAO;EACT;EAEOC,YAAsB;AAC3B,WAAO,KAAKL;EACd;AACF;;;ACbO,IAAMM,yBAAN,MAAMA,gCAA+BC,gBAAAA;EAF5C,OAE4CA;;;EAC1CC,YAAYC,SAAiB;AAC3B,UAAMA,OAAAA;AACNC,WAAOC,eAAe,MAAML,wBAAuBM,SAAS;EAC9D;AACF;;;AHJO,IAAMC,gBAAN,MAAMA,eAAAA;EAHb,OAGaA;;;;;;;EACX,YACmBC,YACAC,SACAC,SACAC,QACjB;SAJiBH,aAAAA;SACAC,UAAAA;SACAC,UAAAA;SACAC,SAAAA;EAChB;EAEH,OAAcF,QAAQD,YAAuC;AAC3D,WAAO,IAAID,eAAcC,YAAY,MAAM,oBAAoB,CAAA,CAAE;EACnE;EAEA,OAAcI,QAAQF,SAAiBC,SAAmB,CAAA,GAAmB;AAC3E,WAAO,IAAIJ,eAAc,MAAM,OAAOG,SAASC,MAAAA;EACjD;EAEA,OAAcE,kBAAkBF,QAAiC;AAC/D,WAAO,IAAIJ,eAAc,MAAM,OAAO,qBAAqBI,MAAAA;EAC7D;EAEOG,gBAA4B;AACjC,QAAI,CAAC,KAAKN,YAAY;AACpB,YAAM,IAAIO,uBAAuB,6CAAA;IACnC;AACA,WAAO,KAAKP;EACd;EAEOQ,YAAqB;AAC1B,WAAO,KAAKP;EACd;EAEOQ,aAAqB;AAC1B,WAAO,KAAKP;EACd;EAEOQ,YAAsB;AAC3B,WAAO,KAAKP;EACd;EAEOQ,YAAqB;AAC1B,WAAO,KAAKR,OAAOS,SAAS;EAC9B;AACF;","names":["DomainError","Error","constructor","message","name","Object","setPrototypeOf","prototype","ValidationError","DomainError","constructor","message","errors","Object","setPrototypeOf","prototype","getStatusCode","getErrors","InvalidAuthResultError","ValidationError","constructor","message","Object","setPrototypeOf","prototype","LoginResponse","authResult","success","message","errors","failure","validationFailure","getAuthResult","InvalidAuthResultError","isSuccess","getMessage","getErrors","hasErrors","length"]}