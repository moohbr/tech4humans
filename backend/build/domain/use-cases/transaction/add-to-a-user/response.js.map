{"version":3,"sources":["../../../../../app/domain/use-cases/transaction/add-to-a-user/response.ts","../../../../../app/domain/errors/domain-error.ts","../../../../../app/domain/errors/validation-error.ts","../../../../../app/domain/errors/transaction/invalid-transaction-id-error.ts"],"sourcesContent":["import { TransactionEntity } from \"@models/transaction/entity\";\nimport { InvalidTransactionIdError } from \"@errors/transaction/invalid-transaction-id-error\";\n\nexport class AddTransactionToUserResponse {\n  private constructor(\n    private readonly transaction: TransactionEntity | null,\n    private readonly success: boolean,\n    private readonly message: string | TransactionEntity,\n    private readonly errors: string[] \n  ) {}\n\n  public static success(transaction: TransactionEntity): AddTransactionToUserResponse {\n    return new AddTransactionToUserResponse(transaction, true, transaction, []);\n  }\n\n  public static failure(\n    message: string,\n    errors: string[] = [],\n  ): AddTransactionToUserResponse {\n    const finalErrors = errors.length > 0 ? errors : (message ? [message] : []);\n    return new AddTransactionToUserResponse(null, false, message, finalErrors);\n  }\n\n  public static validationFailure(errors: string[]): AddTransactionToUserResponse {\n    return new AddTransactionToUserResponse(null, false, \"Validation failed\", errors);\n  }\n\n  public getTransaction(): TransactionEntity {\n    if (!this.transaction) {\n      throw new InvalidTransactionIdError(\"Cannot get transaction from failed response\");\n    }\n    return this.transaction;\n  }\n\n  public isSuccess(): boolean {\n    return this.success;\n  }\n\n  public getMessage(): string | TransactionEntity {\n    return this.message;\n  }\n\n  public getErrors(): string[] {\n    return this.errors;\n  }\n\n  public hasErrors(): boolean {\n    return this.errors.length > 0;\n  }\n}","export abstract class DomainError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = this.constructor.name;\n    Object.setPrototypeOf(this, DomainError.prototype);\n  }\n\n  public abstract getStatusCode(): number;\n} ","import { DomainError } from \"./domain-error\";\n\nexport class ValidationError extends DomainError {\n  constructor(message: string, private readonly errors: string[] = []) {\n    super(message);\n    Object.setPrototypeOf(this, ValidationError.prototype);\n  }\n\n  public getStatusCode(): number {\n    return 400;\n  }\n\n  public getErrors(): string[] {\n    return this.errors;\n  }\n} ","import { ValidationError } from \"../validation-error\";\n\nexport class InvalidTransactionIdError extends ValidationError {\n  constructor(id: string) {\n    super(`Invalid transaction id: ${id}`);\n    Object.setPrototypeOf(this, InvalidTransactionIdError.prototype);\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;;;;;;ACDO,IAAeA,cAAf,MAAeA,qBAAoBC,MAAAA;EAA1C,OAA0CA;;;EACxCC,YAAYC,SAAiB;AAC3B,UAAMA,OAAAA;AACN,SAAKC,OAAO,KAAKF,YAAYE;AAC7BC,WAAOC,eAAe,MAAMN,aAAYO,SAAS;EACnD;AAGF;;;ACNO,IAAMC,kBAAN,MAAMA,yBAAwBC,YAAAA;EAFrC,OAEqCA;;;;EACnCC,YAAYC,SAAkCC,SAAmB,CAAA,GAAI;AACnE,UAAMD,OAAAA,GAAAA,KADsCC,SAAAA;AAE5CC,WAAOC,eAAe,MAAMN,iBAAgBO,SAAS;EACvD;EAEOC,gBAAwB;AAC7B,WAAO;EACT;EAEOC,YAAsB;AAC3B,WAAO,KAAKL;EACd;AACF;;;ACbO,IAAMM,4BAAN,MAAMA,mCAAkCC,gBAAAA;EAF/C,OAE+CA;;;EAC7CC,YAAYC,IAAY;AACtB,UAAM,2BAA2BA,EAAAA,EAAI;AACrCC,WAAOC,eAAe,MAAML,2BAA0BM,SAAS;EACjE;AACF;;;AHJO,IAAMC,+BAAN,MAAMA,8BAAAA;EAFb,OAEaA;;;;;;;EACX,YACmBC,aACAC,SACAC,SACAC,QACjB;SAJiBH,cAAAA;SACAC,UAAAA;SACAC,UAAAA;SACAC,SAAAA;EAChB;EAEH,OAAcF,QAAQD,aAA8D;AAClF,WAAO,IAAID,8BAA6BC,aAAa,MAAMA,aAAa,CAAA,CAAE;EAC5E;EAEA,OAAcI,QACZF,SACAC,SAAmB,CAAA,GACW;AAC9B,UAAME,cAAcF,OAAOG,SAAS,IAAIH,SAAUD,UAAU;MAACA;QAAW,CAAA;AACxE,WAAO,IAAIH,8BAA6B,MAAM,OAAOG,SAASG,WAAAA;EAChE;EAEA,OAAcE,kBAAkBJ,QAAgD;AAC9E,WAAO,IAAIJ,8BAA6B,MAAM,OAAO,qBAAqBI,MAAAA;EAC5E;EAEOK,iBAAoC;AACzC,QAAI,CAAC,KAAKR,aAAa;AACrB,YAAM,IAAIS,0BAA0B,6CAAA;IACtC;AACA,WAAO,KAAKT;EACd;EAEOU,YAAqB;AAC1B,WAAO,KAAKT;EACd;EAEOU,aAAyC;AAC9C,WAAO,KAAKT;EACd;EAEOU,YAAsB;AAC3B,WAAO,KAAKT;EACd;EAEOU,YAAqB;AAC1B,WAAO,KAAKV,OAAOG,SAAS;EAC9B;AACF;","names":["DomainError","Error","constructor","message","name","Object","setPrototypeOf","prototype","ValidationError","DomainError","constructor","message","errors","Object","setPrototypeOf","prototype","getStatusCode","getErrors","InvalidTransactionIdError","ValidationError","constructor","id","Object","setPrototypeOf","prototype","AddTransactionToUserResponse","transaction","success","message","errors","failure","finalErrors","length","validationFailure","getTransaction","InvalidTransactionIdError","isSuccess","getMessage","getErrors","hasErrors"]}