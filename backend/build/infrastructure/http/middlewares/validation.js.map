{"version":3,"sources":["../../../../app/infrastructure/http/middlewares/validation.ts"],"sourcesContent":["import { Request, Response, NextFunction } from \"express\";\nimport { ZodSchema, ZodError } from \"zod\";\n\nexport class ValidationMiddleware {\n  static validate(schema: ZodSchema) {\n    return (req: Request, res: Response, next: NextFunction): void => {\n      try {\n        schema.parse({\n          body: req.body,\n          query: req.query,\n          params: req.params,\n        });\n        next();\n      } catch (error) {\n        if (error instanceof ZodError) {\n          const errors = error.errors.map((err) => ({\n            field: err.path.join(\".\"),\n            message: err.message,\n            code: err.code,\n          }));\n\n          res.status(400).json({\n            success: false,\n            message: \"Validation failed\",\n            errors,\n          });\n          return;\n        }\n\n        res.status(500).json({\n          success: false,\n          message: \"Internal server error\",\n        });\n      }\n    };\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;;;;;AAAA,iBAAoC;AAE7B,IAAMA,uBAAN,MAAMA;EAFb,OAEaA;;;EACX,OAAOC,SAASC,QAAmB;AACjC,WAAO,CAACC,KAAcC,KAAeC,SAAAA;AACnC,UAAI;AACFH,eAAOI,MAAM;UACXC,MAAMJ,IAAII;UACVC,OAAOL,IAAIK;UACXC,QAAQN,IAAIM;QACd,CAAA;AACAJ,aAAAA;MACF,SAASK,OAAO;AACd,YAAIA,iBAAiBC,qBAAU;AAC7B,gBAAMC,SAASF,MAAME,OAAOC,IAAI,CAACC,SAAS;YACxCC,OAAOD,IAAIE,KAAKC,KAAK,GAAA;YACrBC,SAASJ,IAAII;YACbC,MAAML,IAAIK;UACZ,EAAA;AAEAf,cAAIgB,OAAO,GAAA,EAAKC,KAAK;YACnBC,SAAS;YACTJ,SAAS;YACTN;UACF,CAAA;AACA;QACF;AAEAR,YAAIgB,OAAO,GAAA,EAAKC,KAAK;UACnBC,SAAS;UACTJ,SAAS;QACX,CAAA;MACF;IACF;EACF;AACF;","names":["ValidationMiddleware","validate","schema","req","res","next","parse","body","query","params","error","ZodError","errors","map","err","field","path","join","message","code","status","json","success"]}