/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as UsersDashboardImport } from './routes/users/dashboard'
import { Route as AuthSignInImport } from './routes/auth/sign-in'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const UsersDashboardRoute = UsersDashboardImport.update({
  id: '/users/dashboard',
  path: '/users/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/users/dashboard': {
      id: '/users/dashboard'
      path: '/users/dashboard'
      fullPath: '/users/dashboard'
      preLoaderRoute: typeof UsersDashboardImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/users/dashboard': typeof UsersDashboardRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/users/dashboard': typeof UsersDashboardRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/users/dashboard': typeof UsersDashboardRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/sign-in' | '/users/dashboard' | '/auth/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/sign-in' | '/users/dashboard' | '/auth/sign-up'
  id: '__root__' | '/' | '/auth/sign-in' | '/users/dashboard' | '/auth/sign-up/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthSignInRoute: typeof AuthSignInRoute
  UsersDashboardRoute: typeof UsersDashboardRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthSignInRoute: AuthSignInRoute,
  UsersDashboardRoute: UsersDashboardRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/sign-in",
        "/users/dashboard",
        "/auth/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.tsx"
    },
    "/users/dashboard": {
      "filePath": "users/dashboard.tsx"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
